### YamlMime:ManagedReference
items:
- uid: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage
  commentId: T:SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage
  id: ProcessServiceBusMessage
  parent: SampleFunctionsApp.ServiceBusTriggers
  children:
  - SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync(System.String,Microsoft.Extensions.Logging.ILogger)
  langs:
  - csharp
  - vb
  name: ProcessServiceBusMessage
  nameWithType: ProcessServiceBusMessage
  fullName: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage
  type: Class
  source:
    remote:
      path: src/SampleFunctionsApp/SampleFunctionsApp/ServiceBusTriggers/ProcessServiceBusMessage.cs
      branch: main
      repo: https://github.com/Cloud-Awesome/docfx-templates.git
    id: ProcessServiceBusMessage
    path: ../src/SampleFunctionsApp/SampleFunctionsApp/ServiceBusTriggers/ProcessServiceBusMessage.cs
    startLine: 6
  assemblies:
  - SampleFunctionsApp
  namespace: SampleFunctionsApp.ServiceBusTriggers
  syntax:
    content: public static class ProcessServiceBusMessage
    content.vb: Public Module ProcessServiceBusMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync(System.String,Microsoft.Extensions.Logging.ILogger)
  commentId: M:SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync(System.String,Microsoft.Extensions.Logging.ILogger)
  id: RunAsync(System.String,Microsoft.Extensions.Logging.ILogger)
  parent: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage
  langs:
  - csharp
  - vb
  name: RunAsync(String, ILogger)
  nameWithType: ProcessServiceBusMessage.RunAsync(String, ILogger)
  fullName: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync(System.String, Microsoft.Extensions.Logging.ILogger)
  type: Method
  source:
    remote:
      path: src/SampleFunctionsApp/SampleFunctionsApp/ServiceBusTriggers/ProcessServiceBusMessage.cs
      branch: main
      repo: https://github.com/Cloud-Awesome/docfx-templates.git
    id: RunAsync
    path: ../src/SampleFunctionsApp/SampleFunctionsApp/ServiceBusTriggers/ProcessServiceBusMessage.cs
    startLine: 8
  assemblies:
  - SampleFunctionsApp
  namespace: SampleFunctionsApp.ServiceBusTriggers
  syntax:
    content: >-
      [FunctionName("ProcessServiceBusMessage")]

      public static async Task RunAsync([ServiceBusTrigger("inbound-queue", Connection = "ServiceBusConnectionString")] string myQueueItem, ILogger log)
    parameters:
    - id: myQueueItem
      type: System.String
      attributes:
      - type: Microsoft.Azure.WebJobs.ServiceBusTriggerAttribute
        ctor: Microsoft.Azure.WebJobs.ServiceBusTriggerAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: inbound-queue
        namedArguments:
        - name: Connection
          type: System.String
          value: ServiceBusConnectionString
    - id: log
      type: Microsoft.Extensions.Logging.ILogger
    return:
      type: System.Threading.Tasks.Task
    content.vb: >-
      <FunctionName("ProcessServiceBusMessage")>

      Public Shared Function RunAsync(myQueueItem As String, log As ILogger) As Task
  overload: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync*
  attributes:
  - type: Microsoft.Azure.WebJobs.FunctionNameAttribute
    ctor: Microsoft.Azure.WebJobs.FunctionNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ProcessServiceBusMessage
  modifiers.csharp:
  - public
  - static
  - async
  modifiers.vb:
  - Public
  - Shared
references:
- uid: SampleFunctionsApp.ServiceBusTriggers
  commentId: N:SampleFunctionsApp.ServiceBusTriggers
  name: SampleFunctionsApp.ServiceBusTriggers
  nameWithType: SampleFunctionsApp.ServiceBusTriggers
  fullName: SampleFunctionsApp.ServiceBusTriggers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync*
  commentId: Overload:SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync
  name: RunAsync
  nameWithType: ProcessServiceBusMessage.RunAsync
  fullName: SampleFunctionsApp.ServiceBusTriggers.ProcessServiceBusMessage.RunAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
